name: CI Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Variables de entorno básicas para testing
      OPENAI_API_KEY: sk-test-dummy-key
      PYDANTICAI_ALLOW_MODEL_REQUESTS: 'false'
      WHATSAPP_TOKEN: test_token
      WHATSAPP_PHONE_NUMBER_ID: '123456'
      WHATSAPP_VERIFY_TOKEN_WEBHOOK: test_webhook
      COSMOSDB_CONNECTION_STRING: mongodb://localhost:27017

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Debug environment
      run: |
        echo "Python version:"
        python --version
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la

    - name: Install basic dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Solo instalar dependencias básicas para verificar que todo funciona
        pip install pytest

    - name: Verify pytest
      run: |
        # Simplemente verificar que pytest esté instalado y funcionando
        python -c "import pytest; print(f'Pytest version: {pytest.__version__}')"

    - name: Create test report
      run: |
        # Crear un archivo de reporte simple para verificar la carga de artefactos
        echo "Test report created at $(date)" > test-report.txt
        echo "Python environment:" >> test-report.txt
        pip list >> test-report.txt
        # Asegurarse de que exista un directorio para artefactos
        mkdir -p test-artifacts
        cp test-report.txt test-artifacts/

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          test-report.txt
          test-artifacts/
        retention-days: 1
        if-no-files-found: warn
