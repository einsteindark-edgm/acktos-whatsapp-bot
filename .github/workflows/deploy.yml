name: Deploy to Azure Functions

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: whatsapp-acktos-bot-2025
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.9'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest tests/ -v
      env:
        WHATSAPP_TOKEN: ${{ secrets.WHATSAPP_TOKEN }}
        WHATSAPP_PHONE_NUMBER_ID: ${{ secrets.WHATSAPP_PHONE_NUMBER_ID }}
        WHATSAPP_VERIFY_TOKEN_WEBHOOK: ${{ secrets.WHATSAPP_VERIFY_TOKEN_WEBHOOK }}

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Validate Azure environment settings
      run: |
        echo "Verificando configuración en Azure..."
        env_vars=$(az functionapp config appsettings list \
            --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --resource-group rg-whatsapp-bot \
            --query "[].name" -o tsv)
        
        declare -a required_vars=(
            "WHATSAPP_TOKEN"
            "WHATSAPP_PHONE_NUMBER_ID"
            "WHATSAPP_VERIFY_TOKEN_WEBHOOK"
        )
        
        for var in "${required_vars[@]}"; do
            if ! grep -q "$var" <<< "$env_vars"; then
                echo "::error::Variable requerida no encontrada: $var"
                exit 1
            fi
        done
        
        echo "Configuración validada exitosamente"

    - name: Deploy to Azure Functions
      id: deploy
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true

    - name: Check deployment status and logs
      if: always()
      run: |
        echo "Getting deployment status..."
        az functionapp show --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group rg-whatsapp-bot --query state
        
        echo "Getting build logs..."
        az functionapp deployment source show --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group rg-whatsapp-bot
        
        echo "Getting function details..."
        az functionapp function show --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group rg-whatsapp-bot --function-name webhook || echo "Function not found"
